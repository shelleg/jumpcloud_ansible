---

- name: Get user id by username
  uri:
    headers:
      x-api-key: "{{ jumpcloud_api_key | mandatory }}"
    method: POST
    url: "{{ jumpcloud_searchusers_endpoint }}"
    body_format: json
    body:
      filter: [username: "{{ jumpcloud_username }}"]
  register: jumpcloud_user

- name: Remove existing SSH Key "{{ jumpcloud_username }}_rsa" if found
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ jumpcloud_username }}_rsa"
    - "{{ jumpcloud_username }}_rsa.pub"

- name: Generate SSH keys for {{ jumpcloud_username }}
  command: ssh-keygen -q -t rsa -b 4096 -C "{{ jumpcloud_username }}{{ domain }}" -f "{{ jumpcloud_username }}_rsa" -N ""

- set_fact:
    ssh_public_key: "{{ lookup('file', jumpcloud_username + '_rsa.pub' )}}"
    ssh_key_name: "{{ jumpcloud_username }}_public_key"
    ssh_endpoint: "{{ jumpcloud_systemusers_endpoint }}/{{ jumpcloud_user.json.results.0._id }}/sshkeys"

- name: Append user's SSH key to JumpCloud
  uri:
    headers:
      x-api-key: "{{ jumpcloud_api_key | mandatory }}"
    method: POST
    url: "{{ ssh_endpoint }}"
    body_format: json
    body: "{{ lookup('template','body.j2') }}"
